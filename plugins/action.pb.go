// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: plugins/action.proto

package plugins

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActionInput is a message type that represents the input for an action.
type ActionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AssessmentID is the identifier for the assessment.
	AssessmentId string `protobuf:"bytes,1,opt,name=AssessmentId,proto3" json:"AssessmentId,omitempty"`
	// SSPId is the identifier for the System Security Plan.
	SSPId string `protobuf:"bytes,2,opt,name=SSPId,proto3" json:"SSPId,omitempty"`
	// ControlId is the identifier for the control.
	ControlId string `protobuf:"bytes,3,opt,name=ControlId,proto3" json:"ControlId,omitempty"`
	// ComponentId is the identifier for the component.
	ComponentId string `protobuf:"bytes,4,opt,name=ComponentId,proto3" json:"ComponentId,omitempty"`
	// Config is a map that contains configuration data.
	// This is used to pass configuration data to the action before each run.
	Config map[string]string `protobuf:"bytes,5,rep,name=Config,proto3" json:"Config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Parameters is a map that contains parameter data.
	Parameters map[string]string `protobuf:"bytes,6,rep,name=Parameters,proto3" json:"Parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActionInput) Reset() {
	*x = ActionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionInput) ProtoMessage() {}

func (x *ActionInput) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionInput.ProtoReflect.Descriptor instead.
func (*ActionInput) Descriptor() ([]byte, []int) {
	return file_plugins_action_proto_rawDescGZIP(), []int{0}
}

func (x *ActionInput) GetAssessmentId() string {
	if x != nil {
		return x.AssessmentId
	}
	return ""
}

func (x *ActionInput) GetSSPId() string {
	if x != nil {
		return x.SSPId
	}
	return ""
}

func (x *ActionInput) GetControlId() string {
	if x != nil {
		return x.ControlId
	}
	return ""
}

func (x *ActionInput) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ActionInput) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ActionInput) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// ActionOutput is a message type that represents the output of an action.
type ActionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SSPId is the identifier for the System Security Plan.
	SSPId string `protobuf:"bytes,1,opt,name=SSPId,proto3" json:"SSPId,omitempty"`
	// ControlId is the identifier for the control.
	ControlId string `protobuf:"bytes,2,opt,name=ControlId,proto3" json:"ControlId,omitempty"`
	// ComponentId is the identifier for the component.
	ComponentId string `protobuf:"bytes,3,opt,name=ComponentId,proto3" json:"ComponentId,omitempty"`
	// AssessmentID is the identifier for the assessment.
	AssessmentID string `protobuf:"bytes,4,opt,name=AssessmentID,proto3" json:"AssessmentID,omitempty"`
	// Compliant is a boolean that indicates whether the action was compliant or not.
	Compliant bool `protobuf:"varint,5,opt,name=Compliant,proto3" json:"Compliant,omitempty"`
	// ResultData is a Struct that contains the result data of the action.
	ResultData *structpb.Struct `protobuf:"bytes,6,opt,name=ResultData,proto3" json:"ResultData,omitempty"`
}

func (x *ActionOutput) Reset() {
	*x = ActionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugins_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionOutput) ProtoMessage() {}

func (x *ActionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionOutput.ProtoReflect.Descriptor instead.
func (*ActionOutput) Descriptor() ([]byte, []int) {
	return file_plugins_action_proto_rawDescGZIP(), []int{1}
}

func (x *ActionOutput) GetSSPId() string {
	if x != nil {
		return x.SSPId
	}
	return ""
}

func (x *ActionOutput) GetControlId() string {
	if x != nil {
		return x.ControlId
	}
	return ""
}

func (x *ActionOutput) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ActionOutput) GetAssessmentID() string {
	if x != nil {
		return x.AssessmentID
	}
	return ""
}

func (x *ActionOutput) GetCompliant() bool {
	if x != nil {
		return x.Compliant
	}
	return false
}

func (x *ActionOutput) GetResultData() *structpb.Struct {
	if x != nil {
		return x.ResultData
	}
	return nil
}

var File_plugins_action_proto protoreflect.FileDescriptor

var file_plugins_action_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x02, 0x0a,
	0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x53, 0x50, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x53, 0x50, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x43, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdf,
	0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x53, 0x50, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x53, 0x50, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x32, 0x45, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugins_action_proto_rawDescOnce sync.Once
	file_plugins_action_proto_rawDescData = file_plugins_action_proto_rawDesc
)

func file_plugins_action_proto_rawDescGZIP() []byte {
	file_plugins_action_proto_rawDescOnce.Do(func() {
		file_plugins_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugins_action_proto_rawDescData)
	})
	return file_plugins_action_proto_rawDescData
}

var file_plugins_action_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_plugins_action_proto_goTypes = []interface{}{
	(*ActionInput)(nil),     // 0: plugin.ActionInput
	(*ActionOutput)(nil),    // 1: plugin.ActionOutput
	nil,                     // 2: plugin.ActionInput.ConfigEntry
	nil,                     // 3: plugin.ActionInput.ParametersEntry
	(*structpb.Struct)(nil), // 4: google.protobuf.Struct
}
var file_plugins_action_proto_depIdxs = []int32{
	2, // 0: plugin.ActionInput.Config:type_name -> plugin.ActionInput.ConfigEntry
	3, // 1: plugin.ActionInput.Parameters:type_name -> plugin.ActionInput.ParametersEntry
	4, // 2: plugin.ActionOutput.ResultData:type_name -> google.protobuf.Struct
	0, // 3: plugin.ActionService.Execute:input_type -> plugin.ActionInput
	1, // 4: plugin.ActionService.Execute:output_type -> plugin.ActionOutput
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_plugins_action_proto_init() }
func file_plugins_action_proto_init() {
	if File_plugins_action_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugins_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugins_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugins_action_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugins_action_proto_goTypes,
		DependencyIndexes: file_plugins_action_proto_depIdxs,
		MessageInfos:      file_plugins_action_proto_msgTypes,
	}.Build()
	File_plugins_action_proto = out.File
	file_plugins_action_proto_rawDesc = nil
	file_plugins_action_proto_goTypes = nil
	file_plugins_action_proto_depIdxs = nil
}
