syntax = "proto3";

import "google/protobuf/struct.proto";

package plugin;
option go_package = "./plugin";

// ActionInput is a message type that represents the input for an action.
message ActionInput {
  // AssessmentID is the identifier for the assessment.
  string AssessmentId = 1;

  // SSPId is the identifier for the System Security Plan.
  string SSPId = 2;

  // ControlId is the identifier for the control.
  string ControlId = 3;

  // ComponentId is the identifier for the component.
  string ComponentId = 4;

  // Config is a map that contains configuration data.
  // This is used to pass configuration data to the action before each run.
  map<string, string> Config = 5;

  // Parameters is a map that contains parameter data.
  map<string, string> Parameters = 6;
}

// ActionOutput is a message type that represents the output of an action.
message ActionOutput {
  // SSPId is the identifier for the System Security Plan.
  string SSPId = 1;

  // ControlId is the identifier for the control.
  string ControlId = 2;

  // ComponentId is the identifier for the component.
  string ComponentId = 3;

  // AssessmentID is the identifier for the assessment.
  string AssessmentID = 4;

  // Compliant is a boolean that indicates whether the action was compliant or not.
  bool Compliant = 5;

  // ResultData is a Struct that contains the result data of the action.
  google.protobuf.Struct ResultData = 6;

  string Error = 7;
}

// ActionService is a service that provides an Execute method for performing actions.
service ActionService {
  // Execute is a method that takes an ActionInput and returns an ActionOutput.
  rpc Execute (ActionInput) returns (ActionOutput);
}
